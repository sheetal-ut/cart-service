version: '3.8'

services:
  # MongoDB for Command Service
  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - cart-network

  # PostgreSQL for Query Service
  postgres:
    image: postgres:15
    container_name: cart_service_postgres
    environment:
      POSTGRES_DB: cart_service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - cart-network

  # Zookeeper (required by Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cart_service_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - cart-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cart_service_kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - cart-network

  # Cart Command Service
  cart-service-command:
    build:
      context: .
      dockerfile: cart-service-command/Dockerfile
    container_name: cart-service-command
    depends_on:
      - mongodb
      - kafka
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - cart-network

  # Cart Query Service
  cart-service-query:
    build:
      context: .
      dockerfile: cart-service-query/Dockerfile
    container_name: cart-service-query
    depends_on:
      - postgres
      - kafka
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - cart-network

networks:
  cart-network:
    driver: bridge
